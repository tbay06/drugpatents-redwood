input CreateDrugInput {
  medicinalIngredient: String
  brandName: String
  routeOfAdmin: String
  strengthPerUnit: String
  humanOrVet: String
  therapeuticClass: String
  dosageForm: String
  din: String
}

input CreatePatentInput {
  drugId: String!
  patentNum: String!
  filingDate: DateTime
  dateGranted: DateTime
  expirationDate: DateTime
  companyName: String
}

input CreateSavedDrugInput {
  userId: String!
  drugId: String!
}

scalar Date

scalar DateTime

type Drug {
  id: String!
  medicinalIngredient: String
  brandName: String
  routeOfAdmin: String
  strengthPerUnit: String
  humanOrVet: String
  therapeuticClass: String
  dosageForm: String
  din: String
  createdAt: DateTime!
  Patent: [Patent]!
  SavedDrug: [SavedDrug]
}

scalar JSON

scalar JSONObject

type Mutation {
  createDrug(input: CreateDrugInput!): Drug!
  createPatent(input: CreatePatentInput!): Patent!
  createSavedDrug(input: CreateSavedDrugInput!): SavedDrug!
  deleteDrug(id: String!): Drug!
  deletePatent(id: Int!): Patent!
  deleteSavedDrug(id: Int!): SavedDrug!
  updateDrug(id: String!, input: UpdateDrugInput!): Drug!
  updatePatent(id: Int!, input: UpdatePatentInput!): Patent!
  updateSavedDrug(id: Int!, input: UpdateSavedDrugInput!): SavedDrug!
}

type Patent {
  id: Int!
  drugId: String!
  patentNum: String!
  filingDate: DateTime
  dateGranted: DateTime
  expirationDate: DateTime
  companyName: String
  Drug: Drug!
  createdAt: DateTime!
}

type PatentsPerCompany {
  companyName: String!
  _count: PatentsPerCompanyCount!
}

type PatentsPerCompanyCount {
  id: Int!
}

type Query {
  activePatentCount: Int!
  activePatentsPerCompany: [PatentsPerCompany!]!
  drug(id: String!): Drug
  drugCount: Int!
  drugs(take: Int!, skip: Int!): [Drug!]!
  expiredPatentCount: Int!
  expiringSoon: [Patent!]!
  expiringSoonCount: Int!
  patent(id: Int!): Patent
  patentCount: Int!
  patents: [Patent!]!
  recentlyExpired: [Patent!]!
  recentlyExpiredCount: Int!
  redwood: Redwood
  savedDrug(id: Int!): SavedDrug
  savedDrugs(userId: String!): [SavedDrug!]!
  savedDrugsAdmin: [SavedDrug!]!
  totalPatentsPerCompany: [PatentsPerCompany!]!
}

type Redwood {
  version: String
  currentUser: JSON
  prismaVersion: String
}

type SavedDrug {
  id: Int!
  userId: String!
  Drug: Drug!
  drugId: String!
}

scalar Time

input UpdateDrugInput {
  medicinalIngredient: String
  brandName: String
  routeOfAdmin: String
  strengthPerUnit: String
  humanOrVet: String
  therapeuticClass: String
  dosageForm: String
  din: String
}

input UpdatePatentInput {
  drugId: String
  patentNum: String
  filingDate: DateTime
  dateGranted: DateTime
  expirationDate: DateTime
  companyName: String
}

input UpdateSavedDrugInput {
  userId: String
  drugId: String
}
